<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.maomao.ssm.dao.GoodsOverstockUserMapper" >
  <resultMap id="BaseResultMap" type="com.maomao.ssm.bean.GoodsOverstockUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP" />
    <result column="service_id" property="serviceId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="rebate" property="rebate" jdbcType="BIGINT" />
    <result column="price" property="price" jdbcType="BIGINT" />
    <result column="stock_total" property="stockTotal" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="goods_overstock_id" property="goodsOverstockId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.maomao.ssm.bean.GoodsOverstockUserWithBLOBs" extends="BaseResultMap" >
    <result column="detail" property="detail" jdbcType="LONGVARCHAR" />
    <result column="imgs" property="imgs" jdbcType="LONGVARCHAR" />
    <result column="param" property="param" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, name, create_time, modified_time, service_id, status, stock, rebate, price, stock_total, 
      user_id, goods_overstock_id
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <sql id="Blob_Column_List" >
    detail, imgs, param
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.maomao.ssm.bean.GoodsOverstockUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goods_overstock_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.maomao.ssm.bean.GoodsOverstockUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_overstock_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    id,name,create_time,modified_time,service_id,status,stock,rebate,price,stock_total,user_id,goods_overstock_id,detail,imgs,param
    ,
    <include refid="Blob_Column_List" />
    from goods_overstock_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods_overstock_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.maomao.ssm.bean.GoodsOverstockUserExample" >
    delete from goods_overstock_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.maomao.ssm.bean.GoodsOverstockUserWithBLOBs" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into goods_overstock_user (name, create_time, modified_time, 
      service_id, status, stock, 
      rebate, price, stock_total, 
      user_id, goods_overstock_id, detail, 
      imgs, param)
    values (#{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifiedTime,jdbcType=TIMESTAMP}, 
      #{serviceId,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{stock,jdbcType=INTEGER}, 
      #{rebate,jdbcType=BIGINT}, #{price,jdbcType=BIGINT}, #{stockTotal,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{goodsOverstockId,jdbcType=INTEGER}, #{detail,jdbcType=LONGVARCHAR}, 
      #{imgs,jdbcType=LONGVARCHAR}, #{param,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.maomao.ssm.bean.GoodsOverstockUserWithBLOBs" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into goods_overstock_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifiedTime != null" >
        modified_time,
      </if>
      <if test="serviceId != null" >
        service_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="rebate != null" >
        rebate,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="stockTotal != null" >
        stock_total,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="goodsOverstockId != null" >
        goods_overstock_id,
      </if>
      <if test="detail != null" >
        detail,
      </if>
      <if test="imgs != null" >
        imgs,
      </if>
      <if test="param != null" >
        param,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null" >
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceId != null" >
        #{serviceId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="rebate != null" >
        #{rebate,jdbcType=BIGINT},
      </if>
      <if test="price != null" >
        #{price,jdbcType=BIGINT},
      </if>
      <if test="stockTotal != null" >
        #{stockTotal,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsOverstockId != null" >
        #{goodsOverstockId,jdbcType=INTEGER},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=LONGVARCHAR},
      </if>
      <if test="imgs != null" >
        #{imgs,jdbcType=LONGVARCHAR},
      </if>
      <if test="param != null" >
        #{param,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maomao.ssm.bean.GoodsOverstockUserExample" resultType="java.lang.Integer" >
    select count(*) from goods_overstock_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods_overstock_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedTime != null" >
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.serviceId != null" >
        service_id = #{record.serviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.stock != null" >
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.rebate != null" >
        rebate = #{record.rebate,jdbcType=BIGINT},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=BIGINT},
      </if>
      <if test="record.stockTotal != null" >
        stock_total = #{record.stockTotal,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsOverstockId != null" >
        goods_overstock_id = #{record.goodsOverstockId,jdbcType=INTEGER},
      </if>
      <if test="record.detail != null" >
        detail = #{record.detail,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.imgs != null" >
        imgs = #{record.imgs,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.param != null" >
        param = #{record.param,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update goods_overstock_user
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      service_id = #{record.serviceId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      stock = #{record.stock,jdbcType=INTEGER},
      rebate = #{record.rebate,jdbcType=BIGINT},
      price = #{record.price,jdbcType=BIGINT},
      stock_total = #{record.stockTotal,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      goods_overstock_id = #{record.goodsOverstockId,jdbcType=INTEGER},
      detail = #{record.detail,jdbcType=LONGVARCHAR},
      imgs = #{record.imgs,jdbcType=LONGVARCHAR},
      param = #{record.param,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods_overstock_user
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      service_id = #{record.serviceId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      stock = #{record.stock,jdbcType=INTEGER},
      rebate = #{record.rebate,jdbcType=BIGINT},
      price = #{record.price,jdbcType=BIGINT},
      stock_total = #{record.stockTotal,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      goods_overstock_id = #{record.goodsOverstockId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.maomao.ssm.bean.GoodsOverstockUserWithBLOBs" >
    update goods_overstock_user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null" >
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceId != null" >
        service_id = #{serviceId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="rebate != null" >
        rebate = #{rebate,jdbcType=BIGINT},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="stockTotal != null" >
        stock_total = #{stockTotal,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsOverstockId != null" >
        goods_overstock_id = #{goodsOverstockId,jdbcType=INTEGER},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=LONGVARCHAR},
      </if>
      <if test="imgs != null" >
        imgs = #{imgs,jdbcType=LONGVARCHAR},
      </if>
      <if test="param != null" >
        param = #{param,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.maomao.ssm.bean.GoodsOverstockUserWithBLOBs" >
    update goods_overstock_user
    set name = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      service_id = #{serviceId,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      stock = #{stock,jdbcType=INTEGER},
      rebate = #{rebate,jdbcType=BIGINT},
      price = #{price,jdbcType=BIGINT},
      stock_total = #{stockTotal,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      goods_overstock_id = #{goodsOverstockId,jdbcType=INTEGER},
      detail = #{detail,jdbcType=LONGVARCHAR},
      imgs = #{imgs,jdbcType=LONGVARCHAR},
      param = #{param,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maomao.ssm.bean.GoodsOverstockUser" >
    update goods_overstock_user
    set name = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      service_id = #{serviceId,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      stock = #{stock,jdbcType=INTEGER},
      rebate = #{rebate,jdbcType=BIGINT},
      price = #{price,jdbcType=BIGINT},
      stock_total = #{stockTotal,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      goods_overstock_id = #{goodsOverstockId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>