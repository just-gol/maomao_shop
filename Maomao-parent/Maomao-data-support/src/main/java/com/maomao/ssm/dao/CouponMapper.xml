<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.maomao.ssm.dao.CouponMapper" >
  <resultMap id="BaseResultMap" type="com.maomao.ssm.bean.Coupon" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="discount" property="discount" jdbcType="BIGINT" />
    <result column="avaiable_money" property="avaiableMoney" jdbcType="BIGINT" />
    <result column="validity_term" property="validityTerm" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="use_start_time" property="useStartTime" jdbcType="TIMESTAMP" />
    <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="get_num" property="getNum" jdbcType="INTEGER" />
    <result column="stock_total" property="stockTotal" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, name, introduction, type, discount, avaiable_money, validity_term, create_time, 
      use_start_time, modified_time, stock, get_num, stock_total, start_time, end_time, 
      status
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.maomao.ssm.bean.CouponExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from coupon
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    id,name,introduction,type,discount,avaiable_money,validity_term,create_time,use_start_time,modified_time,stock,get_num,stock_total,start_time,end_time,status
    from coupon
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from coupon
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.maomao.ssm.bean.CouponExample" >
    delete from coupon
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.maomao.ssm.bean.Coupon" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into coupon (name, introduction, type, 
      discount, avaiable_money, validity_term, 
      create_time, use_start_time, modified_time, 
      stock, get_num, stock_total, 
      start_time, end_time, status
      )
    values (#{name,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, 
      #{discount,jdbcType=BIGINT}, #{avaiableMoney,jdbcType=BIGINT}, #{validityTerm,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{useStartTime,jdbcType=TIMESTAMP}, #{modifiedTime,jdbcType=TIMESTAMP}, 
      #{stock,jdbcType=INTEGER}, #{getNum,jdbcType=INTEGER}, #{stockTotal,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.maomao.ssm.bean.Coupon" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into coupon
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="avaiableMoney != null" >
        avaiable_money,
      </if>
      <if test="validityTerm != null" >
        validity_term,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="useStartTime != null" >
        use_start_time,
      </if>
      <if test="modifiedTime != null" >
        modified_time,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="getNum != null" >
        get_num,
      </if>
      <if test="stockTotal != null" >
        stock_total,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=BIGINT},
      </if>
      <if test="avaiableMoney != null" >
        #{avaiableMoney,jdbcType=BIGINT},
      </if>
      <if test="validityTerm != null" >
        #{validityTerm,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="useStartTime != null" >
        #{useStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null" >
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="getNum != null" >
        #{getNum,jdbcType=INTEGER},
      </if>
      <if test="stockTotal != null" >
        #{stockTotal,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maomao.ssm.bean.CouponExample" resultType="java.lang.Integer" >
    select count(*) from coupon
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update coupon
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=BIGINT},
      </if>
      <if test="record.avaiableMoney != null" >
        avaiable_money = #{record.avaiableMoney,jdbcType=BIGINT},
      </if>
      <if test="record.validityTerm != null" >
        validity_term = #{record.validityTerm,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.useStartTime != null" >
        use_start_time = #{record.useStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedTime != null" >
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stock != null" >
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.getNum != null" >
        get_num = #{record.getNum,jdbcType=INTEGER},
      </if>
      <if test="record.stockTotal != null" >
        stock_total = #{record.stockTotal,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update coupon
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      discount = #{record.discount,jdbcType=BIGINT},
      avaiable_money = #{record.avaiableMoney,jdbcType=BIGINT},
      validity_term = #{record.validityTerm,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      use_start_time = #{record.useStartTime,jdbcType=TIMESTAMP},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      stock = #{record.stock,jdbcType=INTEGER},
      get_num = #{record.getNum,jdbcType=INTEGER},
      stock_total = #{record.stockTotal,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.maomao.ssm.bean.Coupon" >
    update coupon
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=BIGINT},
      </if>
      <if test="avaiableMoney != null" >
        avaiable_money = #{avaiableMoney,jdbcType=BIGINT},
      </if>
      <if test="validityTerm != null" >
        validity_term = #{validityTerm,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="useStartTime != null" >
        use_start_time = #{useStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null" >
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="getNum != null" >
        get_num = #{getNum,jdbcType=INTEGER},
      </if>
      <if test="stockTotal != null" >
        stock_total = #{stockTotal,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maomao.ssm.bean.Coupon" >
    update coupon
    set name = #{name,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      discount = #{discount,jdbcType=BIGINT},
      avaiable_money = #{avaiableMoney,jdbcType=BIGINT},
      validity_term = #{validityTerm,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      use_start_time = #{useStartTime,jdbcType=TIMESTAMP},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      stock = #{stock,jdbcType=INTEGER},
      get_num = #{getNum,jdbcType=INTEGER},
      stock_total = #{stockTotal,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>