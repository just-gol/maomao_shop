<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.maomao.ssm.dao.GoodsOrderMapperCustom" >
  <resultMap id="BaseResultMap" type="com.maomao.ssm.bean.GoodsOrderCustom" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_num" property="orderNum" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="BIGINT" />
    <result column="pay_money" property="payMoney" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="pay_account" property="payAccount" jdbcType="VARCHAR" />
    <result column="coupon_record_id" property="couponRecordId" jdbcType="INTEGER" />
    <result column="coupon_money" property="couponMoney" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="account_time" property="accountTime" jdbcType="TIMESTAMP" />
    <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="over_time" property="overTime" jdbcType="TIMESTAMP" />
    <result column="sales_user_id" property="salesUserId" jdbcType="INTEGER" />
    <result column="order_src" property="orderSrc" jdbcType="TINYINT" />
    <result column="express" property="express" jdbcType="VARCHAR" />
    <result column="express_num" property="expressNum" jdbcType="VARCHAR" />
    <result column="pay_type" property="payType" jdbcType="TINYINT" />
    <result column="get_way" property="getWay" jdbcType="TINYINT" />
    <result column="pay_way" property="payWay" jdbcType="TINYINT" />
	<result column="biz_id" property="bizId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="price_purchase" property="pricePurchase" jdbcType="BIGINT" />
    <result column="price_sales" property="priceSales" jdbcType="BIGINT" />
    <result column="category" property="category" jdbcType="INTEGER" />
   	<result column="imgs" property="imgs" jdbcType="VARCHAR" />
   	<result column="unpay_money" property="unpayMoney" jdbcType="BIGINT" />
   	<result column="deposit" property="deposit" jdbcType="BIGINT" />
   	<result column="sku" property="sku" jdbcType="VARCHAR" />
   	<result column="rebate" property="rebate" jdbcType="BIGINT" />
    <result column="order_category" property="orderCategory" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <select id="selectListByUserId" resultMap="BaseResultMap" >
  	SELECT a.*,b.imgs,b.price_purchase,b.price_sales,b.num,b.name,b.biz_id,b.category,b.sku FROM goods_order AS a JOIN goods_order_goods AS b ON a.id = b.order_id WHERE user_id =#{arg0,jdbcType=INTEGER} ORDER BY a.create_time DESC
  </select>
  <select id="selectByOrderId" resultMap="BaseResultMap" >
  	SELECT a.*,b.imgs,b.price_purchase,b.price_sales,b.num,b.name,b.biz_id,b.category,b.sku,b.deposit FROM goods_order AS a JOIN goods_order_goods AS b ON a.id = b.order_id WHERE a.id =#{arg0,jdbcType=INTEGER}
  </select>
  <select id="selectListByExample" resultMap="BaseResultMap" parameterType="com.maomao.ssm.bean.GoodsOrderExample">
  	SELECT a.*,b.imgs,b.price_purchase,b.price_sales,b.num,b.name,b.biz_id,b.category,b.rebate FROM goods_order AS a JOIN goods_order_goods AS b ON a.id = b.order_id 
	<if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectListByAdminAndMonth" resultMap="BaseResultMap" >
	SELECT b.name,b.price_purchase,b.num,a.over_time FROM goods_order AS a JOIN goods_order_goods AS b ON a.id = b.order_id WHERE a.admin_id = #{arg0,jdbcType=INTEGER} AND DATE_FORMAT(a.over_time,'%Y-%m')=#{arg1,jdbcType=VARCHAR}
  </select>
  <select id="selectByCode" resultMap="BaseResultMap" >
  	SELECT a.*,b.imgs,b.price_purchase,b.price_sales,b.num,b.name,b.biz_id,b.category,b.sku,b.deposit,b.sku FROM goods_order AS a JOIN goods_order_goods AS b ON a.id = b.order_id WHERE a.code=#{code} AND a.status=#{status}
  </select>
  <select id="selectListByDailyDetail" resultMap="BaseResultMap" >
  SELECT a.order_num,b.name,b.sku,a.money,IFNULL(a.coupon_money,0),a.pay_money,a.status FROM goods_order AS a JOIN goods_order_goods AS b ON a.id=b.order_id WHERE ((a.pay_time BETWEEN #{startTime} AND #{endTime}) OR (a.account_time BETWEEN #{startTime} AND #{endTime}) OR (a.over_time BETWEEN #{startTime} AND #{endTime} AND a.status=#{status})) 
  <if test="queryString != null">
  AND (a.order_num LIKE CONCAT('%',#{queryString},'%') OR b.name LIKE CONCAT('%',#{queryString},'%'))
  </if>
  </select>
  <select id="selectSumByExample" resultMap="BaseResultMap" parameterType="com.maomao.ssm.bean.GoodsOrderExample">
  SELECT IFNULL(SUM(money),0) AS money,IFNULL(SUM(unpay_money),0) AS unpay_money FROM goods_order
  <if test="_parameter != null" >
  	<include refid="Example_Where_Clause" />
  </if>
  </select>
   <select id="selectListOverstock" resultMap="BaseResultMap">
  	SELECT a.*,b.imgs,b.num,b.name,b.biz_id,b.category,b.rebate,SUM(c.price_purchase) AS price_purchase 
  	FROM goods_order AS a 
  	JOIN goods_order_goods AS b 
  	ON a.id = b.order_id 
  	JOIN goods_order_goods_info AS c 
    ON c.order_id = a.id 
	WHERE a.order_category = #{category}
  	<if test="queryString != null">
  	AND (a.order_num LIKE CONCAT('%',#{queryString},'%') OR a.user_name LIKE CONCAT('%',#{queryString},'%') OR a.mobile LIKE CONCAT('%',#{queryString},'%')) 
  	</if>
  	<if test="type != null and type == 1">
  	AND c.admin IN (${scope})
  	</if>
  	<if test="type != null and type == 2">
  	AND c.admin = #{scope}
  	</if>
  	GROUP BY a.id
  </select>
  <select id="selectListByGoodsIdAndStatus" resultMap="BaseResultMap">
  	SELECT a.*,b.imgs,b.price_purchase,b.price_sales,b.num,b.name,b.biz_id,b.category,b.rebate 
  	FROM goods_order AS a JOIN goods_order_goods AS b ON a.id = b.order_id 
  	WHERE a.status=#{status} AND b.biz_id=#{bizId} AND b.category=#{category}
  </select>
</mapper>