<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.maomao.ssm.dao.UserApplyMapper" >
  <resultMap id="BaseResultMap" type="com.maomao.ssm.bean.UserApply" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="bank_account" property="bankAccount" jdbcType="VARCHAR" />
    <result column="bank_mobile" property="bankMobile" jdbcType="CHAR" />
    <result column="bank_username" property="bankUsername" jdbcType="VARCHAR" />
    <result column="id_card" property="idCard" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="check_admin" property="checkAdmin" jdbcType="INTEGER" />
    <result column="check_status" property="checkStatus" jdbcType="TINYINT" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, user_id, bank_name, bank_account, bank_mobile, bank_username, id_card, name, 
      create_time, check_admin, check_status, reason
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.maomao.ssm.bean.UserApplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    id,user_id,bank_name,bank_account,bank_mobile,bank_username,id_card,name,create_time,check_admin,check_status,reason
    from user_apply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_apply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.maomao.ssm.bean.UserApplyExample" >
    delete from user_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.maomao.ssm.bean.UserApply" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_apply (user_id, bank_name, bank_account, 
      bank_mobile, bank_username, id_card, 
      name, create_time, check_admin, 
      check_status, reason)
    values (#{userId,jdbcType=INTEGER}, #{bankName,jdbcType=VARCHAR}, #{bankAccount,jdbcType=VARCHAR}, 
      #{bankMobile,jdbcType=CHAR}, #{bankUsername,jdbcType=VARCHAR}, #{idCard,jdbcType=CHAR}, 
      #{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{checkAdmin,jdbcType=INTEGER}, 
      #{checkStatus,jdbcType=TINYINT}, #{reason,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.maomao.ssm.bean.UserApply" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="bankAccount != null" >
        bank_account,
      </if>
      <if test="bankMobile != null" >
        bank_mobile,
      </if>
      <if test="bankUsername != null" >
        bank_username,
      </if>
      <if test="idCard != null" >
        id_card,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="checkAdmin != null" >
        check_admin,
      </if>
      <if test="checkStatus != null" >
        check_status,
      </if>
      <if test="reason != null" >
        reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null" >
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankMobile != null" >
        #{bankMobile,jdbcType=CHAR},
      </if>
      <if test="bankUsername != null" >
        #{bankUsername,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        #{idCard,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkAdmin != null" >
        #{checkAdmin,jdbcType=INTEGER},
      </if>
      <if test="checkStatus != null" >
        #{checkStatus,jdbcType=TINYINT},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maomao.ssm.bean.UserApplyExample" resultType="java.lang.Integer" >
    select count(*) from user_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_apply
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.bankName != null" >
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccount != null" >
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.bankMobile != null" >
        bank_mobile = #{record.bankMobile,jdbcType=CHAR},
      </if>
      <if test="record.bankUsername != null" >
        bank_username = #{record.bankUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null" >
        id_card = #{record.idCard,jdbcType=CHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkAdmin != null" >
        check_admin = #{record.checkAdmin,jdbcType=INTEGER},
      </if>
      <if test="record.checkStatus != null" >
        check_status = #{record.checkStatus,jdbcType=TINYINT},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_apply
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      bank_mobile = #{record.bankMobile,jdbcType=CHAR},
      bank_username = #{record.bankUsername,jdbcType=VARCHAR},
      id_card = #{record.idCard,jdbcType=CHAR},
      name = #{record.name,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      check_admin = #{record.checkAdmin,jdbcType=INTEGER},
      check_status = #{record.checkStatus,jdbcType=TINYINT},
      reason = #{record.reason,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.maomao.ssm.bean.UserApply" >
    update user_apply
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null" >
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankMobile != null" >
        bank_mobile = #{bankMobile,jdbcType=CHAR},
      </if>
      <if test="bankUsername != null" >
        bank_username = #{bankUsername,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        id_card = #{idCard,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkAdmin != null" >
        check_admin = #{checkAdmin,jdbcType=INTEGER},
      </if>
      <if test="checkStatus != null" >
        check_status = #{checkStatus,jdbcType=TINYINT},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maomao.ssm.bean.UserApply" >
    update user_apply
    set user_id = #{userId,jdbcType=INTEGER},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      bank_mobile = #{bankMobile,jdbcType=CHAR},
      bank_username = #{bankUsername,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=CHAR},
      name = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      check_admin = #{checkAdmin,jdbcType=INTEGER},
      check_status = #{checkStatus,jdbcType=TINYINT},
      reason = #{reason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>